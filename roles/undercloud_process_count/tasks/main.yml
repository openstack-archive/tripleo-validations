---
- name: Ensure we get needed facts
  setup:
    gather_subset:
      - '!all'
      - '!any'
      - '!min'
      - env

- name: Get the Container CLI from the undercloud.conf file
  become: true
  validations_read_ini:
    path: "{{ ansible_env.HOME }}/undercloud.conf"
    section: DEFAULT
    key: container_cli
    ignore_missing_file: true
  register: container_cli

- name: Collect the number of running processes per OpenStack service
  command: "{{ container_cli.value|default('podman', true) }} exec {{ item.container }} pgrep -f -c {{ item.proc }}"
  become: true
  ignore_errors: true
  register: "process_count"
  changed_when: false
  loop:
    - {container: "heat_engine", proc: "heat-engine"}
    - {container: "ironic_inspector", proc: "ironic-inspector"}
    - {container: "ironic_conductor", proc: "ironic-conductor"}
    - {container: "nova_api", proc: "nova_api"}
    - {container: "nova_scheduler", proc: "nova-scheduler"}
    - {container: "nova_conductor", proc: "nova-conductor"}
    - {container: "glance_api", proc: "glance-api"}

- name: Create warning messages
  command: echo "There are {{ item.stdout }} {{ item.item }} processes running. Having more than {{ max_process_count }} risks running out of memory."
  register: process_warnings
  with_items: "{{ process_count.results }}"
  when: "item.stdout|int > max_process_count"

- name: Output warning message
  warn: msg={{ warning_msg }}
  when: "warning_msg|length > 0"
  vars:
    warning_msg: "{{ process_warnings.results|selectattr('changed')|map(attribute='stdout')|join('\n') }}"
